/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JDialog.java to edit this template
 */
package UI;

import excepciones.NoEncontradoException;
import java.awt.event.KeyEvent;
import java.time.LocalDate;
import javax.swing.JOptionPane;
import model.Otros.Gimnasio;

/**
 *
 * @author sergi
 */
public class DialogAgregarComentario extends javax.swing.JDialog {

    /**
     * Creates new form DialogAgregarComentario
     */
    private Gimnasio gimnasio;
    String dni_persona;
    public DialogAgregarComentario(java.awt.Frame parent, boolean modal,String dni_persona,Gimnasio gimnasio) {
        super(parent, modal);
        initComponents();
        this.gimnasio = gimnasio;
        btnAgregar.putClientProperty( "JButton.buttonType", "roundRect" );
        this.dni_persona = dni_persona;

    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        background = new javax.swing.JPanel();
        cbElegir = new javax.swing.JComboBox<>();
        btnBanearCliente = new javax.swing.JButton();
        jScrollPane1 = new javax.swing.JScrollPane();
        tfComentarioApercibimiento = new javax.swing.JTextArea();
        btnAgregar = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);
        setTitle("Ingresar");
        setResizable(false);

        cbElegir.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Comentario", "Apercibimiento" }));

        btnBanearCliente.setText("Banear");
        btnBanearCliente.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnBanearClienteActionPerformed(evt);
            }
        });

        tfComentarioApercibimiento.setColumns(20);
        tfComentarioApercibimiento.setRows(5);
        tfComentarioApercibimiento.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                tfComentarioApercibimientoKeyPressed(evt);
            }
        });
        jScrollPane1.setViewportView(tfComentarioApercibimiento);

        btnAgregar.setText("Agregar");
        btnAgregar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnAgregarActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout backgroundLayout = new javax.swing.GroupLayout(background);
        background.setLayout(backgroundLayout);
        backgroundLayout.setHorizontalGroup(
            backgroundLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(backgroundLayout.createSequentialGroup()
                .addGroup(backgroundLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(backgroundLayout.createSequentialGroup()
                        .addGap(79, 79, 79)
                        .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(btnBanearCliente))
                    .addGroup(backgroundLayout.createSequentialGroup()
                        .addGap(136, 136, 136)
                        .addComponent(cbElegir, javax.swing.GroupLayout.PREFERRED_SIZE, 102, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(backgroundLayout.createSequentialGroup()
                        .addGap(145, 145, 145)
                        .addComponent(btnAgregar)))
                .addContainerGap(28, Short.MAX_VALUE))
        );
        backgroundLayout.setVerticalGroup(
            backgroundLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(backgroundLayout.createSequentialGroup()
                .addGap(25, 25, 25)
                .addComponent(cbElegir, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(backgroundLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, backgroundLayout.createSequentialGroup()
                        .addComponent(btnBanearCliente)
                        .addGap(38, 38, 38)))
                .addGap(32, 32, 32)
                .addComponent(btnAgregar)
                .addContainerGap(31, Short.MAX_VALUE))
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addComponent(background, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(0, 0, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(background, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void btnAgregarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnAgregarActionPerformed
        // TODO add your handling code here:
        AgregarComentarioApercibimiento();
        
    }//GEN-LAST:event_btnAgregarActionPerformed

    private void tfComentarioApercibimientoKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_tfComentarioApercibimientoKeyPressed
        // TODO add your handling code here:
                      if (evt.getKeyCode() == KeyEvent.VK_ENTER) {
            tfComentarioApercibimiento.append("\n"); // Insertar salto de línea al presionar Enter
        }
        
    }//GEN-LAST:event_tfComentarioApercibimientoKeyPressed

    private void btnBanearClienteActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnBanearClienteActionPerformed
        // TODO add your handling code here:
        Banear();
    }//GEN-LAST:event_btnBanearClienteActionPerformed

    /**
     * @param args the command line arguments
     */


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JPanel background;
    private javax.swing.JButton btnAgregar;
    private javax.swing.JButton btnBanearCliente;
    private javax.swing.JComboBox<String> cbElegir;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTextArea tfComentarioApercibimiento;
    // End of variables declaration//GEN-END:variables

    private void AgregarComentarioApercibimiento() {
           String seleccion = cbElegir.getSelectedItem().toString();
           
           try{
                  if (seleccion.equals("Comentario")) {
                    gimnasio.agregarComentario(dni_persona,tfComentarioApercibimiento.getText(),LocalDate.now());
                    Utilidades.MostrarMensajeInformativo("El comentario fue agregado exitosamente.");

                } else if (seleccion.equals("Apercibimiento")) {
                    gimnasio.agregarApercibimiento(dni_persona, tfComentarioApercibimiento.getText(), LocalDate.now());
                    Utilidades.MostrarMensajeInformativo("El apercibimiento fue agregado exitosamente.");
                }
                  
                  
                  this.dispose();
                  
                  
               
           }catch(NoEncontradoException e){
               Utilidades.MostrarMensajeWarning(e.getMessage());
           }
 
    }

    private void Banear() {
        try{
           boolean confirma_operacion = ConfirmarOperacion("¿Banear?");
           if(confirma_operacion){
            gimnasio.banear(dni_persona);
            Utilidades.MostrarMensajeInformativo("La persona fue baneada exitosamente");
            this.dispose();
           }

        }catch(NoEncontradoException e){
            Utilidades.MostrarMensajeWarning(e.getMessage());
        }
        
    }
    
        private boolean ConfirmarOperacion(String texto_pregunta){
        boolean confirma = false;
        String []opciones = {"No", "Sí"};
        int rta = JOptionPane.showOptionDialog(null,texto_pregunta, "Atención", 
                JOptionPane.DEFAULT_OPTION, JOptionPane.WARNING_MESSAGE, 
                null, opciones, opciones[1]);
        
        if(rta==1){
            confirma = true;
        }
        return confirma;
    }
}
